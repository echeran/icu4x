name: Perf - Runtime

on:
  push:
    branches: [ master ]
  pull_request:
    branches: '*'

jobs:
  benchmark:
    name: Runtime benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      #- run: mkdir -p ci-bench/runtime

      # - name: Use nightly cargo for bench command
      #   run: rustup toolchain update nightly && rustup default nightly

      - name: Try on a particular component (`locale`)
        run: cd components/locale

      - name: Run benchmark
        run: cd components/locale && (cargo bench -- --output-format bencher | tee output.txt) && cd ../..

      - name: Debug
        run: pwd && ls -l && echo "components/locale" && ls -l components/locale

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1.8.1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: components/locale/output.txt
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t5/GitHub-Actions/Github-action-not-triggering-gh-pages-upon-push/td-p/26869/highlight/false
          # Not using this action to push GH pages, so using GITHUB_TOKEN b/c it is just for commenting on the commit on alert
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@sffc @zbraniecki @echeran'

      - name: Debug - list branches
        run: echo "git branch" && git branch && pwd && ls -l

      - name: Debug - create branch out of current detached head
        run: echo "git checkout -b test-branch" && git checkout -b test-branch && pwd && ls -l && echo "dev" && ls -l dev

      - name: Debug - checkout gh-pages branch
        run: echo "git checkout gh-pages" && git checkout gh-pages && pwd && ls -l && echo "dev" && ls -l dev

      - name: Dashboard -> Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          # Setup for publishing to an external repo using `deploy_key` option:
          #
          # Step 1 - Create SSH key pair. Use your public key as a Github "Deploy Key" and your private
          # key as a Github "Secret". Where to register these keys comes next.
          # https://github.com/marketplace/actions/github-pages-action#%EF%B8%8F-create-ssh-deploy-key
          #
          # Step 2 - After creating public/private key pair, put the private key in the repo running the
          # action as a Secret and call it "ACTIONS_DEPLOY_KEY". Put the public key as a Deploy Key in the
          # target repo where the Github Pages will be copied to.
          # https://github.com/marketplace/actions/github-pages-action#%EF%B8%8F-deploy-to-external-repository
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: echeran/icu4x-docs
          publish_branch: gh-pages
          publish_dir: ./dev

